@using EsportsPredictor.Interfaces
@model Match
@{
	var opponents = ViewData["Opponents"] as IOpponents;
}

<div class="text-center">
	<h1>@Model.GetLocalBeginAtString()</h1>
	<h1>@Model.Name</h1>
</div>
<br />

<!--This uses partial views to display information about the match based on if the opponents are Players or Teams-->
@if(opponents is null)
{
	<h6>Error Retrieving Match Information</h6>
}
else if (opponents.Opponent_type == "Team")
{
	@await Html.PartialAsync("_TeamVsPartial", opponents)
}
else if(opponents.Opponent_type == "Player")
{
	@await Html.PartialAsync("_PlayerVsPartial", opponents)
}
else
{
	<h6>Detailed Match Information Not Available</h6>
}
<br />

<!--Button to make a prediction if the game hasn't started-->
@if(DateTime.UtcNow < Model.Begin_at)
{
	<div class="d-flex align-items-center justify-content-center">
		<form method="get" action="/predictions/new/@Model.Slug">
			<button class="btn btn-success btn-lg" type="submit">Make a Prediction</button>
		</form>
	</div>
}
